{"version":3,"sources":["Coin.js","App.js","reportWebVitals.js","index.js"],"names":["Coin","name","image","symbol","price","volume","priceChange","marketcap","className","src","alt","toLocaleString","toFixed","App","useState","coins","setCoins","search","setSearch","useEffect","axios","get","then","res","data","catch","error","console","log","filteredCoins","filter","coin","toLowerCase","includes","type","placeholder","onChange","e","target","value","map","market_cap","current_price","price_change_percentage_24h","total_volume","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAqCeA,EAhCF,SAAC,GAAoE,IAAlEC,EAAiE,EAAjEA,KAAMC,EAA2D,EAA3DA,MAAOC,EAAoD,EAApDA,OAAQC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,UAC7D,OACI,qBAAKC,UAAU,iBAAf,SACI,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,OAAf,UACI,qBAAKC,IAAKP,EAAOQ,IAAI,WACrB,6BAAKT,IACL,mBAAGO,UAAU,cAAb,SAA4BL,OAEhC,sBAAKK,UAAU,YAAf,UACI,oBAAGA,UAAU,aAAb,cAA4BJ,EAAMO,iBAAlC,OACA,oBAAGH,UAAU,cAAb,cAA6BH,EAAOM,oBACnCL,EAAc,EACX,oBAAGE,UAAU,mBAAb,UAAiCF,EAC5BM,QAAQ,GADb,OAGA,oBAAGJ,UAAU,qBAAb,UAAmCF,EAC9BM,QAAQ,GADb,OAIJ,oBAAGJ,UAAU,iBAAb,uBACeD,EAAUI,6BCqC9BE,MAxDf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WAERC,IAAMC,IAAI,4HACPC,MAAK,SAAAC,GACJP,EAASO,EAAIC,SAEdC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAC7B,IACL,IAIMG,EAAgBd,EAAMe,QAAO,SAAAC,GAAI,OAErCA,EAAK9B,KAAK+B,cAAcC,SAAShB,EAAOe,kBAIxC,OACE,sBAAKxB,UAAU,WAAf,UACE,sBAAKA,UAAU,cAAf,UAEE,oBAAIA,UAAU,YAAd,+BAGA,+BACE,uBAAO0B,KAAK,OAAOC,YAAY,SAC7B3B,UAAU,aAAa4B,SAnBd,SAAAC,GACnBnB,EAAUmB,EAAEC,OAAOC,eAqBpBV,EAAcW,KAAI,SAAAT,GACjB,OACE,cAAC,EAAD,CACA9B,KAAM8B,EAAK9B,KACXC,MAAO6B,EAAK7B,MACZC,OAAQ4B,EAAK5B,OACbI,UAAWwB,EAAKU,WAChBrC,MAAO2B,EAAKW,cACZpC,YAAayB,EAAKY,4BACpBtC,OAAQ0B,EAAKa,cAPAb,EAAKc,WC/BLC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6191f893.chunk.js","sourcesContent":["import React from 'react';\nimport \"./Coin.css\"\n\n\n\nconst Coin = ({ name, image, symbol, price, volume, priceChange, marketcap }) => {\n    return (\n        <div className=\"coin-container\">\n            <div className=\"coin-row\">\n                <div className=\"coin\">\n                    <img src={image} alt='crypto' />\n                    <h1>{name}</h1>\n                    <p className=\"coin-symbol\">{symbol}</p>\n                </div>\n                <div className=\"coin-data\">\n                    <p className=\"coin-price\">#{price.toLocaleString()} </p>\n                    <p className=\"coin-volume\">#{volume.toLocaleString()}</p>\n                    {priceChange < 0 ? (\n                        <p className=\"coin-percent red\">{priceChange\n                            .toFixed(2)}%</p>\n                    ) : (\n                        <p className=\"coin-percent green\">{priceChange\n                            .toFixed(2)}%</p>\n                    )}\n\n                    <p className=\"coin-marketcap\">\n                        Mkt Cap: #{marketcap.toLocaleString()}\n                    </p>\n\n\n                </div>\n            </div>\n\n        </div>\n    );\n};\n\nexport default Coin;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Coin from './Coin';\n\n\n\nfunction App() {\n  const [coins, setCoins] = useState([]);\n  const [search, setSearch] = useState('')\n\n  useEffect(() => {\n\n    axios.get(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=ngn&order=market_cap_desc&per_page=100&page=1&sparkline=false\")\n      .then(res => {\n        setCoins(res.data);\n      })\n      .catch(error => console.log(error));\n  }, []);\nconst handleChange = e => {\n  setSearch(e.target.value)\n}\n\nconst filteredCoins = coins.filter(coin =>\n  \n  coin.name.toLowerCase().includes(search.toLowerCase())\n  \n  )\n\n  return (\n    <div className=\"coin-app\">\n      <div className=\"coin-search\">\n\n        <h1 className=\"coin-text\">\n          Search a currency\n        </h1>\n        <form>\n          <input type=\"text\" placeholder=\"Search\"\n            className=\"coin-input\" onChange={handleChange}/>\n        </form>\n      </div>\n{filteredCoins.map(coin =>{\n  return (\n    <Coin key={coin.id}  \n    name={coin.name} \n    image={coin.image} \n    symbol={coin.symbol}\n    marketcap={coin.market_cap}\n    price={coin.current_price}\n    priceChange={coin.price_change_percentage_24h}\n  volume={coin.total_volume}\n    />\n\n\n    )\n})}\n\n\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}